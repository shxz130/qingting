<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"
         version="3.1">


    <display-name>qingting</display-name>

    <!-- 释放框架级的javabean分析带来的内存泄漏 -->
    <listener>
        <listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>
    </listener>
    <!-- Spring的log4j监听器 -->
    <listener>
        <listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
    </listener>

    <context-param>
        <param-name>log4jConfigLocation</param-name>
        <param-value>classpath:log4j.properties</param-value>
    </context-param>

    <context-param>
        <param-name>log4jRefreshInterval</param-name>
        <param-value>60000</param-value>
    </context-param>

    <!-- Spring上下文监听器 -->
    <context-param>
        <param-name>
            contextConfigLocation
        </param-name>
        <param-value>
            classpath:*.xml
        </param-value>
    </context-param>
    <listener>
        <listener-class>
            org.springframework.web.context.ContextLoaderListener
        </listener-class>
    </listener>

    <context-param>
        <param-name>webAppRootKey</param-name>
        <param-value>webapp.lc</param-value>
    </context-param>

    <listener>
        <listener-class>org.springframework.web.util.WebAppRootListener</listener-class>
    </listener>


    <filter>
        <filter-name>CharacterFilter</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>utf-8</param-value>
        </init-param>
        <init-param>
            <param-name>ForceEncoding</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>

    <filter-mapping>
        <filter-name>CharacterFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <servlet>
        <servlet-name>Spring-Dispatcher</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    </servlet>

    <servlet-mapping>
        <servlet-name>Spring-Dispatcher</servlet-name>
        <url-pattern>/</url-pattern>
    </servlet-mapping>




    <!-- 每次请求前经过的过滤器,检验用户会话 -->



    <!-- 默认servlet处理静态资源 -->
    <servlet-mapping>
        <servlet-name>default</servlet-name>
        <url-pattern>*.js</url-pattern>
    </servlet-mapping>

    <servlet-mapping>
        <servlet-name>default</servlet-name>
        <url-pattern>*.map</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>default</servlet-name>
        <url-pattern>*.css</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>default</servlet-name>
        <url-pattern>*.png</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>default</servlet-name>
        <url-pattern>*.gif</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>default</servlet-name>
        <url-pattern>*.jpg</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>default</servlet-name>
        <url-pattern>*.ico</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>default</servlet-name>
        <url-pattern>*.eot</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>default</servlet-name>
        <url-pattern>*.svg</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>default</servlet-name>
        <url-pattern>*.ttf</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>default</servlet-name>
        <url-pattern>*.woff</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>default</servlet-name>
        <url-pattern>*.swf</url-pattern>
    </servlet-mapping>
    <!-- 连接池监控 -->


    <!-- WebStatFilter用于采集web-jdbc关联监控的数据 -->
    <!--     <filter> -->
    <!--         <filter-name>DruidWebStatFilter</filter-name> -->
    <!--         <filter-class>com.alibaba.druid.support.http.WebStatFilter</filter-class> -->
    <!--         <init-param> -->
    <!--             <param-name>exclusions</param-name> -->
    <!--             <param-value>*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*</param-value> -->
    <!--         </init-param> -->
    <!--         配置profileEnable能够监控单个url调用的sql列表 -->
    <!--         <init-param> -->
    <!--             <param-name>profileEnable</param-name> -->
    <!--             <param-value>true</param-value> -->
    <!--         </init-param> -->
    <!--         你可以配置principalSessionName，使得druid能够知道当前的session的用户是谁 -->
    <!--         <init-param> -->
    <!--             <param-name>principalSessionName</param-name> -->
    <!--             <param-value>xxx.user</param-value> -->
    <!--         </init-param> -->
    <!--     </filter> -->
    <!--     <filter-mapping> -->
    <!--         <filter-name>DruidWebStatFilter</filter-name> -->
    <!--         <url-pattern>/*</url-pattern> -->
    <!--     </filter-mapping> -->


    <!-- c标签引用 -->
    <jsp-config>
        <taglib>
            <taglib-uri>http://java.sun.com/jsp/jstl/core</taglib-uri>
            <taglib-location>/WEB-INF/tld/c.tld</taglib-location>
        </taglib>
    </jsp-config>

    <mime-mapping>
        <extension>xlsx</extension>
        <mime-type>application/vnd.ms-excel</mime-type>
    </mime-mapping>

    <welcome-file-list>
        <welcome-file>index.htm</welcome-file>
        <welcome-file>index.htm</welcome-file>
        <welcome-file>index.jsp</welcome-file>
        <welcome-file>default.html</welcome-file>
        <welcome-file>default.htm</welcome-file>
        <welcome-file>default.jsp</welcome-file>
    </welcome-file-list>

</web-app>